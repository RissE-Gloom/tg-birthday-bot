const { Telegraf } = require('telegraf');
const { createClient } = require('@supabase/supabase-js');
const { DateTime } = require('luxon');

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Supabase
const supabase = createClient(
  'https://wttruqdkpbxhoylacjuv.supabase.co',
  'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Ind0dHJ1cWRrcGJ4aG95bGFjanV2Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTUwNDA4OTAsImV4cCI6MjA3MDYxNjg5MH0.AnygEr0ZY-GFtjf8FSbvQpKptXenYKbPfNp1OFnzYE8'
);

const bot = new Telegraf('476971889:AAHqIoP0f3hTF7K79JD4_VON8to_awhu9_g');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∞—Ç –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
async function checkUpcomingBirthdays() {
  const now = DateTime.now().setZone('Europe/Moscow');
  const today = now.toFormat('dd.MM');
  const in7Days = now.plus({ days: 7 }).toFormat('dd.MM');

  // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  const { data: users, error } = await supabase
    .from('users')
    .select('*');

  if (error) {
    console.error('–û—à–∏–±–∫–∞ Supabase:', error);
    return;
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—É—é –∑–∞–ø–∏—Å—å
  for (const user of users) {
    // –ï—Å–ª–∏ —Å–µ–≥–æ–¥–Ω—è –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è
    if (user.birth_date === today) {
      await bot.telegram.sendMessage(
        user.telegram_id,
        `üéâ ${user.name}, —Å–µ–≥–æ–¥–Ω—è —Ç–≤–æ–π –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è! üéÇ`
      );
    }
    // –ï—Å–ª–∏ –¥–æ –¥–Ω—è —Ä–æ–∂–¥–µ–Ω–∏—è 7 –¥–Ω–µ–π
    else if (user.birth_date === in7Days) {
      await bot.telegram.sendMessage(
        user.telegram_id,
        `‚è≥ ${user.name}, —á–µ—Ä–µ–∑ –Ω–µ–¥–µ–ª—é (${user.birth_date}) –±—É–¥–µ—Ç —Ç–≤–æ–π –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è!`
      );
    }
  }
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 24 —á–∞—Å–∞
setInterval(checkUpcomingBirthdays, 24 * 60 * 60 * 1000);

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on('text', async (ctx) => {
  const { id, first_name } = ctx.from;
  const inputDate = ctx.message.text.trim();

  // –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞—Ç—ã (–ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤)
  const normalizedDate = inputDate
    .replace(/\D/g, '') // –£–¥–∞–ª—è–µ–º –≤—Å–µ –Ω–µ—Ü–∏—Ñ—Ä–æ–≤—ã–µ —Å–∏–º–≤–æ–ª—ã
    .replace(/^(\d{1,2})(\d{2})$/, '$1.$2'); // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –≤ –î–î.–ú–ú

  if (!/^\d{2}\.\d{2}$/.test(normalizedDate)) {
    return ctx.reply('‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç! –ò—Å–ø–æ–ª—å–∑—É–π –î–î.–ú–ú (–Ω–∞–ø—Ä–∏–º–µ—Ä, 31.12)');
  }

  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ Supabase
  const { error } = await supabase
    .from('users')
    .upsert({ 
      telegram_id: id, 
      name: first_name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', 
      birth_date: normalizedDate 
    });

  if (error) {
    console.error(error);
    return ctx.reply('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö.');
  }

  ctx.reply(`‚úÖ –î–∞—Ç–∞ "${normalizedDate}" —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞! –Ø –Ω–∞–ø–æ–º–Ω—é –∑–∞ –Ω–µ–¥–µ–ª—é –∏ –≤ –¥–µ–Ω—å —Å–æ–±—ã—Ç–∏—è.`);
});

// –ü–µ—Ä–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
checkUpcomingBirthdays();

bot.launch();
console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏—Ç –¥–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è...');
